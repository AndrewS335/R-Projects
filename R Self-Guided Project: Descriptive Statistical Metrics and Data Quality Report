README

Project Overview

This project demonstrates my ability to use R for data analysis by calculating descriptive statistical metrics and generating a data quality report. The steps are detailed to showcase my skills and understanding of data manipulation, summary statistics, and report generation. The project is designed to be straightforward, highlighting key competencies relevant to a data analysis role.

Steps and Goals

Step 1: Data Loading
Goal: Load the dataset into R for analysis and verify successful data import.

print("hello")
data <- read.csv("data.csv", stringsAsFactors = FALSE)
data

Step 2: Frequency Distribution
Goal: Calculate and display frequency distributions of categorical variables to understand the data composition.

length(data$Transmission.Type)
length(unique(data$Transmission.Type))
freq <- table(data$Transmission.Type)
freq <- sort(freq, decreasing = TRUE)
freq

length(unique(data$Make))
freq2 <- table(data$Make)
freq2 <- sort(freq2, decreasing = TRUE)
freq2

length(unique(data$Market.Category))
freq3 <- table(data$Market.Category)
freq3 <- sort(freq3, decreasing = TRUE)
freq3

Step 3: Central Tendency
Goal: Compute mean and median values of numerical variables to measure central tendency.

mean(data$Engine.HP)
mean(data$Engine.HP, na.rm = TRUE)
mean(data$MSRP)
mean(data$MSRP, na.rm = TRUE)
median(data$Engine.HP)
median(data$Engine.HP, na.rm = TRUE)
median(data$MSRP)
median(data$MSRP, na.rm = TRUE)

Step 4: Dispersion
Goal: Determine the range, variance, and standard deviation of numerical variables to assess data spread.

min(data$Engine.HP, na.rm = TRUE)
max(data$Engine.HP, na.rm = TRUE)
min(data$MSRP, na.rm = TRUE)
max(data$MSRP, na.rm = TRUE)
min(data$city.mpg, na.rm = TRUE)
max(data$city.mpg, na.rm = TRUE)
range(data$Engine.HP, na.rm = TRUE)
range(data$city.mpg, na.rm = TRUE)
var(data$Engine.HP, na.rm = TRUE)
var(data$city.mpg, na.rm = TRUE)
sd(data$Engine.HP, na.rm = TRUE)

Step 5: Data Type Conversion and Missing Values
Goal: Illustrate data type conversion and identify missing values within the dataset.

as.numeric(2)
as.character(2)
test <- as.character(1:3)
mean(test)
test2 <- c(NA, 2, 55, 42, NA)
test2
sum(is.na(test2))
sum(is.na(data$Transmission.Type))
sum(is.na(data$Number.of.Doors))

Step 6: Data Quality Function
Goal: Develop a custom function to summarize data quality metrics including minimum, maximum, mean, standard deviation, total entries, null counts, unique values, and data types.

apply(data, MARGIN=2, length)
sapply(data, function(x) min(x, na.rm=TRUE))
quality_data <- function(df=NULL){
  if(is.null(df)) print("Please pass a non-empty data frame")
  summary_table <- do.call(data.frame,
                  list(
                    Min = sapply(df, function(x) min(x, na.rm=TRUE)),
                    Max = sapply(df, function(x) max(x, na.rm=TRUE)),
                    Mean = sapply(df, function(x) mean(x, na.rm=TRUE)),
                    SD = sapply(df, function(x) sd(x, na.rm=TRUE)),
                    Total = sapply(df, 2, length),
                    NULLS = sapply(df, function(x) sum(is.na(x)))),
                    Unique = sapply(df, function(x) length(unique(x)),
                    dataType = sapply(df, class)
                  ))
  nums <- vapply(summary_table, is.numeric, FUN.VALUE = logical(1))
  summary_table[,nums] <- round(summary_table[, nums], digits = 3)
  return(summary_table)
}

Step 7: Data Quality Report
Goal: Generate and save a comprehensive data quality report as a CSV file, including calculated summary metrics for each column in the dataset.

df_quality <- quality_data(data)
df_quality <- cbind(Columns=rownames(df_quality),
                    data.frame(df_quantity, row.names = NULL))
write.csv(df_quality, paste0("Data Quality Report_", 
          format(Sys.time(), "%d-%m-%Y-%H%M%S"),
                 ".csv"),
                row.names = FALSE)

Instructions to Run the Project
1. Ensure data.csv is in your working directory.
2. Load the R script and run it step-by-step to see the output at each stage.
3. Check the generated Data Quality Report CSV file in your working directory.

Skills Demonstrated
1. Data import and verification
2. Frequency distribution calculation
3. Central tendency and dispersion measures
4. Data type conversion and handling missing values
5. Function creation for automated data quality assessment
6. Report generation and file handling in R




